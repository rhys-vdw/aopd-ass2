# Configuration file to run with GUI - Good for debugging and testing

#map=maps/battleground.map
#map=maps/random512-25-3.map
#map=maps/AR0202SR.map
#map=maps/bloodvenomfalls.map

#map=maps/diamond-1024.map
#map=maps/tranquilpaths.map

#map=maps/boom.map
#grid=euclidean
script=maps/dynamic2.mapscript	
grid=manhatten

mintimestep=1
timer=pulser
pulsertime=20
steps=13000
steptime=100



totaltime=700

#diamond
map=maps/diamond-512.map
startpos=256,2
destpos=256,510

#donkey
map=maps/donkeykong.map
startpos=256,2
destpos=356,510

#blastedlands
#map=maps/blastedlands2.map
#startpos=103,95
#destpos=478,422

quiet=false
killonlimit=true
managegc=false


# NAME TO BE DISPLAYED (IF NONE, THE CLASS NAME WILL BE USED) 
#agentname=My Good Agent

# SOME IMPLEMENTED AGENTS - UNCOMMENT THE ONE TO USE 
### Just pick a random move; never arrives! (provided in lib/Apparate.jar)
#agentclass=agents.MyRandomAgent
### 2 Real-time planner agents (provided in lib/Apparate.jar)
#agentclass=agents.MyLSSLRTAAgent
#agentclass=agents.MyALSSLRTAAgent
### A greedy agent, gets stuck! (provided in lib/Apparate.jar)
#agentclass=agents.MyGreedyAgent
### A depth-first based agent, takes ages to get to destination! (in src/agents)
#agentclass=agents.MyDFSAgent
### Slow agent - always A* planning (provided in lib/Apparate.jar)
#agentclass=agents.MySimpleAStarAgent
### Smarter A* - replan only if needed (provided in lib/Apparate.jar)
#agentclass=agents.MyRestartAStarAgent
### Your agent! (in src/agents)
#agentclass=agents.MyCoolAgent

#agentclass=agents.AStar
#agentclass=agents.RestartingWeightedAStar
#agentloc=./lib/MyCoolAgent.jar
agentclass=agents.DeadlineAwareSearch
#agentclass=agents.MyCoolAgent
#agentclass=agents.MyRestartAStarAgent
#agentclass=agents.PreferredOperatorAStar

# agentloc= states where the agentclass is to be found
agentloc=./	
agentloc=./lib/MyCoolAgent.jar		





#startpos=85,65
#
#destpos=334,468
